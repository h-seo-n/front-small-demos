{"ast":null,"code":"var _jsxFileName = \"/Users/seoyeonheo/projects/react-for-beginners/src/components/Movie.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = ({\n  movie\n}) => {\n  var _movie$genre_ids;\n  const GENRE_BY_ID = Object.freeze({\n    28: \"Action\",\n    12: \"Adventure\",\n    16: \"Animation\",\n    35: \"Comedy\",\n    80: \"Crime\",\n    99: \"Documentary\",\n    18: \"Drama\",\n    10751: \"Family\",\n    14: \"Fantasy\",\n    36: \"History\",\n    27: \"Horror\",\n    10402: \"Music\",\n    9648: \"Mystery\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10770: \"TV Movie\",\n    53: \"Thriller\",\n    10752: \"War\",\n    37: \"Western\"\n  });\n  const returnGenre = id => {\n    var _GENRE_BY_ID$id;\n    return (_GENRE_BY_ID$id = GENRE_BY_ID[id]) !== null && _GENRE_BY_ID$id !== void 0 ? _GENRE_BY_ID$id : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"movie-title\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movie/${movie.id}`,\n        children: [movie.title, movie.original_language === \"en\" ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\" (\", movie.original_title, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"movie-poster\",\n      src: movie.poster_path,\n      alt: `poster of ${movie.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-meta\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Released in \", movie.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"chips\",\n      style: {\n        listStyle: \"none\",\n        padding: 0,\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginRight: 6,\n          fontSize: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            float: \"left\"\n          },\n          children: [\"Genre\", \" \"]\n        }, 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), (_movie$genre_ids = movie.genre_ids) === null || _movie$genre_ids === void 0 ? void 0 : _movie$genre_ids.map(id => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chip\",\n          style: {\n            float: \"left\"\n          },\n          children: [\"\\xA0\", returnGenre(id)]\n        }, `${movie.id}`.concat(\" \", `${id}`), true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","Movie","movie","_movie$genre_ids","GENRE_BY_ID","Object","freeze","returnGenre","id","_GENRE_BY_ID$id","className","children","to","title","original_language","original_title","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","alt","release_date","style","listStyle","padding","margin","marginRight","fontSize","float","genre_ids","map","concat","_c","$RefreshReg$"],"sources":["/Users/seoyeonheo/projects/react-for-beginners/src/components/Movie.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\nconst Movie = ({ movie }) => {\n  const GENRE_BY_ID = Object.freeze({\n    28: \"Action\",\n    12: \"Adventure\",\n    16: \"Animation\",\n    35: \"Comedy\",\n    80: \"Crime\",\n    99: \"Documentary\",\n    18: \"Drama\",\n    10751: \"Family\",\n    14: \"Fantasy\",\n    36: \"History\",\n    27: \"Horror\",\n    10402: \"Music\",\n    9648: \"Mystery\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10770: \"TV Movie\",\n    53: \"Thriller\",\n    10752: \"War\",\n    37: \"Western\",\n  });\n  const returnGenre = (id) => GENRE_BY_ID[id] ?? null;\n\n  return (\n    <div className=\"movie-card\" key={movie.id}>\n      <h2 className=\"movie-title\">\n        <Link to={`/movie/${movie.id}`}>\n          {movie.title}\n          {movie.original_language === \"en\" ? null : (\n            <small> ({movie.original_title})</small>\n          )}\n        </Link>\n      </h2>\n      <img\n        className=\"movie-poster\"\n        src={movie.poster_path}\n        alt={`poster of ${movie.title}`}\n      />\n      <div className=\"movie-meta\">\n        <h4>Released in {movie.release_date}</h4>\n      </div>\n\n      <ul\n        className=\"chips\"\n        style={{ listStyle: \"none\", padding: 0, margin: 0 }}\n      >\n        <li style={{ marginRight: 6, fontSize: \"20px\" }}>\n          <strong key={0} style={{ float: \"left\" }}>\n            Genre{\" \"}\n          </strong>{\" \"}\n        </li>\n\n        {movie.genre_ids?.map((id) => {\n          return (\n            <li\n              className=\"chip\"\n              key={`${movie.id}`.concat(\" \", `${id}`)}\n              style={{ float: \"left\" }}\n            >\n              &nbsp;{returnGenre(id)}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}