{"ast":null,"code":"var _jsxFileName = \"/Users/seoyeonheo/projects/react-for-beginners/src/Movie.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = ({\n  movie\n}) => {\n  var _movie$genre_ids;\n  const GENRE_BY_ID = Object.freeze({\n    28: \"Action\",\n    12: \"Adventure\",\n    16: \"Animation\",\n    35: \"Comedy\",\n    80: \"Crime\",\n    99: \"Documentary\",\n    18: \"Drama\",\n    10751: \"Family\",\n    14: \"Fantasy\",\n    36: \"History\",\n    27: \"Horror\",\n    10402: \"Music\",\n    9648: \"Mystery\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10770: \"TV Movie\",\n    53: \"Thriller\",\n    10752: \"War\",\n    37: \"Western\"\n  });\n  const returnGenre = id => {\n    var _GENRE_BY_ID$id;\n    return (_GENRE_BY_ID$id = GENRE_BY_ID[id]) !== null && _GENRE_BY_ID$id !== void 0 ? _GENRE_BY_ID$id : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [movie.title, movie.original_language === \"en\" ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\" (\", movie.original_title, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster_path,\n      width: \"40%\",\n      alt: `poster of ${movie.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Released in \", movie.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: \"none\",\n        display: \"inline\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          float: \"left\"\n        },\n        children: \"Genre : \"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \" \", (_movie$genre_ids = movie.genre_ids) === null || _movie$genre_ids === void 0 ? void 0 : _movie$genre_ids.map(id => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            float: \"left\"\n          },\n          children: [\"\\xA0\", returnGenre(id)]\n        }, `${movie.id}`.concat(\" \", `${id}`), true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), movie.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Movie","movie","_movie$genre_ids","GENRE_BY_ID","Object","freeze","returnGenre","id","_GENRE_BY_ID$id","_jsxDEV","children","title","original_language","original_title","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","width","alt","release_date","style","listStyleType","display","float","genre_ids","map","concat","overview","_c","$RefreshReg$"],"sources":["/Users/seoyeonheo/projects/react-for-beginners/src/Movie.js"],"sourcesContent":["const Movie = ({movie}) => {\n\n    const GENRE_BY_ID = Object.freeze({\n        28: \"Action\", 12: \"Adventure\", 16: \"Animation\", 35: \"Comedy\", 80: \"Crime\",\n        99: \"Documentary\", 18: \"Drama\", 10751: \"Family\", 14: \"Fantasy\", 36: \"History\",\n        27: \"Horror\", 10402: \"Music\", 9648: \"Mystery\", 10749: \"Romance\",\n        878: \"Science Fiction\", 10770: \"TV Movie\", 53: \"Thriller\", 10752: \"War\", 37: \"Western\",\n    });\n    const returnGenre = (id) => GENRE_BY_ID[id] ?? null;\n\n\n    return (\n    <div key={movie.id}>\n      <h2>\n        {movie.title}\n        {movie.original_language === \"en\" ? null : (\n          <small> ({movie.original_title})</small>\n        )}\n      </h2>\n      <img src={movie.poster_path} width=\"40%\" alt={`poster of ${movie.title}`} />\n      <h4>Released in {movie.release_date}</h4>\n      \n      <ul style={{ listStyleType: \"none\", display: \"inline\" }}>\n        <strong key={0} style={{ float: \"left\" }}>Genre : </strong>{\" \"}\n        {movie.genre_ids?.map((id) => {\n          return (<li \n          key={`${movie.id}`.concat(\" \",`${id}`)}\n          style={{ float: \"left\" }}>\n            &nbsp;{returnGenre(id)}\n          </li>);\n        })}\n      </ul>\n      \n      <p>\n        <strong>Summary</strong>\n        <br />\n        {movie.overview}\n      </p>\n      <hr />\n    </div>\n  );\n};\n\nexport default Movie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}