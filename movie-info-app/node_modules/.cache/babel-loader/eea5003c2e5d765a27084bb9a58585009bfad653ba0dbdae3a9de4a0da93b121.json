{"ast":null,"code":"import{Link}from\"react-router-dom\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Movie=_ref=>{var _movie$genre_ids;let{movie}=_ref;const GENRE_BY_ID=Object.freeze({28:\"Action\",12:\"Adventure\",16:\"Animation\",35:\"Comedy\",80:\"Crime\",99:\"Documentary\",18:\"Drama\",10751:\"Family\",14:\"Fantasy\",36:\"History\",27:\"Horror\",10402:\"Music\",9648:\"Mystery\",10749:\"Romance\",878:\"Science Fiction\",10770:\"TV Movie\",53:\"Thriller\",10752:\"War\",37:\"Western\"});const returnGenre=id=>{var _GENRE_BY_ID$id;return(_GENRE_BY_ID$id=GENRE_BY_ID[id])!==null&&_GENRE_BY_ID$id!==void 0?_GENRE_BY_ID$id:null;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:/*#__PURE__*/_jsxs(Link,{to:\"/movie/\".concat(movie.id),children:[movie.title,movie.original_language===\"en\"?null:/*#__PURE__*/_jsxs(\"small\",{children:[\" (\",movie.original_title,\")\"]})]})}),/*#__PURE__*/_jsx(\"img\",{src:movie.poster_path,width:\"40%\",alt:\"poster of \".concat(movie.title)}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Released in \",movie.release_date]}),/*#__PURE__*/_jsxs(\"ul\",{style:{listStyleType:\"none\",display:\"inline\"},children:[/*#__PURE__*/_jsx(\"strong\",{style:{float:\"left\"},children:\"Genre : \"},0),\" \",(_movie$genre_ids=movie.genre_ids)===null||_movie$genre_ids===void 0?void 0:_movie$genre_ids.map(id=>{return/*#__PURE__*/_jsxs(\"li\",{style:{float:\"left\"},children:[\"\\xA0\",returnGenre(id)]},\"\".concat(movie.id).concat(\" \",\"\".concat(id)));})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Summary\"}),/*#__PURE__*/_jsx(\"br\",{}),movie.overview]}),/*#__PURE__*/_jsx(\"hr\",{})]},movie.id);};export default Movie;","map":{"version":3,"names":["Link","jsxs","_jsxs","jsx","_jsx","Movie","_ref","_movie$genre_ids","movie","GENRE_BY_ID","Object","freeze","returnGenre","id","_GENRE_BY_ID$id","children","to","concat","title","original_language","original_title","src","poster_path","width","alt","release_date","style","listStyleType","display","float","genre_ids","map","overview"],"sources":["/Users/seoyeonheo/projects/react-for-beginners/src/components/Movie.js"],"sourcesContent":["import {Link} from \"react-router-dom\";\n\nconst Movie = ({movie}) => {\n\n    const GENRE_BY_ID = Object.freeze({\n        28: \"Action\", 12: \"Adventure\", 16: \"Animation\", 35: \"Comedy\", 80: \"Crime\",\n        99: \"Documentary\", 18: \"Drama\", 10751: \"Family\", 14: \"Fantasy\", 36: \"History\",\n        27: \"Horror\", 10402: \"Music\", 9648: \"Mystery\", 10749: \"Romance\",\n        878: \"Science Fiction\", 10770: \"TV Movie\", 53: \"Thriller\", 10752: \"War\", 37: \"Western\",\n    });\n    const returnGenre = (id) => GENRE_BY_ID[id] ?? null;\n\n\n    return (\n    <div key={movie.id}>\n      <h2>\n      <Link to={`/movie/${movie.id}`}>\n        {movie.title}\n        {movie.original_language === \"en\" ? null : (\n          <small> ({movie.original_title})</small>\n        )}\n      </Link>\n      </h2>\n      <img src={movie.poster_path} width=\"40%\" alt={`poster of ${movie.title}`} />\n      <h4>Released in {movie.release_date}</h4>\n      \n      <ul style={{ listStyleType: \"none\", display: \"inline\" }}>\n        <strong key={0} style={{ float: \"left\" }}>Genre : </strong>{\" \"}\n        {movie.genre_ids?.map((id) => {\n          return (<li \n          key={`${movie.id}`.concat(\" \",`${id}`)}\n          style={{ float: \"left\" }}>\n            &nbsp;{returnGenre(id)}\n          </li>);\n        })}\n      </ul>\n      \n      <p>\n        <strong>Summary</strong>\n        <br />\n        {movie.overview}\n      </p>\n      <hr />\n    </div>\n  );\n};\n\nexport default Movie;"],"mappings":"AAAA,OAAQA,IAAI,KAAO,kBAAkB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAa,KAAAC,gBAAA,IAAZ,CAACC,KAAK,CAAC,CAAAF,IAAA,CAElB,KAAM,CAAAG,WAAW,CAAGC,MAAM,CAACC,MAAM,CAAC,CAC9B,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,WAAW,CAAE,EAAE,CAAE,WAAW,CAAE,EAAE,CAAE,QAAQ,CAAE,EAAE,CAAE,OAAO,CACzE,EAAE,CAAE,aAAa,CAAE,EAAE,CAAE,OAAO,CAAE,KAAK,CAAE,QAAQ,CAAE,EAAE,CAAE,SAAS,CAAE,EAAE,CAAE,SAAS,CAC7E,EAAE,CAAE,QAAQ,CAAE,KAAK,CAAE,OAAO,CAAE,IAAI,CAAE,SAAS,CAAE,KAAK,CAAE,SAAS,CAC/D,GAAG,CAAE,iBAAiB,CAAE,KAAK,CAAE,UAAU,CAAE,EAAE,CAAE,UAAU,CAAE,KAAK,CAAE,KAAK,CAAE,EAAE,CAAE,SACjF,CAAC,CAAC,CACF,KAAM,CAAAC,WAAW,CAAIC,EAAE,OAAAC,eAAA,QAAAA,eAAA,CAAKL,WAAW,CAACI,EAAE,CAAC,UAAAC,eAAA,UAAAA,eAAA,CAAI,IAAI,GAGnD,mBACAZ,KAAA,QAAAa,QAAA,eACEX,IAAA,OAAAW,QAAA,cACAb,KAAA,CAACF,IAAI,EAACgB,EAAE,WAAAC,MAAA,CAAYT,KAAK,CAACK,EAAE,CAAG,CAAAE,QAAA,EAC5BP,KAAK,CAACU,KAAK,CACXV,KAAK,CAACW,iBAAiB,GAAK,IAAI,CAAG,IAAI,cACtCjB,KAAA,UAAAa,QAAA,EAAO,IAAE,CAACP,KAAK,CAACY,cAAc,CAAC,GAAC,EAAO,CACxC,EACG,CAAC,CACH,CAAC,cACLhB,IAAA,QAAKiB,GAAG,CAAEb,KAAK,CAACc,WAAY,CAACC,KAAK,CAAC,KAAK,CAACC,GAAG,cAAAP,MAAA,CAAeT,KAAK,CAACU,KAAK,CAAG,CAAE,CAAC,cAC5EhB,KAAA,OAAAa,QAAA,EAAI,cAAY,CAACP,KAAK,CAACiB,YAAY,EAAK,CAAC,cAEzCvB,KAAA,OAAIwB,KAAK,CAAE,CAAEC,aAAa,CAAE,MAAM,CAAEC,OAAO,CAAE,QAAS,CAAE,CAAAb,QAAA,eACtDX,IAAA,WAAgBsB,KAAK,CAAE,CAAEG,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,CAAC,UAAQ,EAArC,CAA6C,CAAC,CAAC,GAAG,EAAAR,gBAAA,CAC9DC,KAAK,CAACsB,SAAS,UAAAvB,gBAAA,iBAAfA,gBAAA,CAAiBwB,GAAG,CAAElB,EAAE,EAAK,CAC5B,mBAAQX,KAAA,OAERwB,KAAK,CAAE,CAAEG,KAAK,CAAE,MAAO,CAAE,CAAAd,QAAA,EAAC,MAClB,CAACH,WAAW,CAACC,EAAE,CAAC,GAFnB,GAAAI,MAAA,CAAGT,KAAK,CAACK,EAAE,EAAGI,MAAM,CAAC,GAAG,IAAAA,MAAA,CAAIJ,EAAE,CAAE,CAGjC,CAAC,CACP,CAAC,CAAC,EACA,CAAC,cAELX,KAAA,MAAAa,QAAA,eACEX,IAAA,WAAAW,QAAA,CAAQ,SAAO,CAAQ,CAAC,cACxBX,IAAA,QAAK,CAAC,CACLI,KAAK,CAACwB,QAAQ,EACd,CAAC,cACJ5B,IAAA,QAAK,CAAC,GA5BEI,KAAK,CAACK,EA6BX,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}