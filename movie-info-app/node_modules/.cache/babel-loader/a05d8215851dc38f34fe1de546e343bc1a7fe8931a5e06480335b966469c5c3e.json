{"ast":null,"code":"var _jsxFileName = \"/Users/seoyeonheo/projects/react-for-beginners/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const GENRE_BY_ID = Object.freeze({\n    28: \"Action\",\n    12: \"Adventure\",\n    16: \"Animation\",\n    35: \"Comedy\",\n    80: \"Crime\",\n    99: \"Documentary\",\n    18: \"Drama\",\n    10751: \"Family\",\n    14: \"Fantasy\",\n    36: \"History\",\n    27: \"Horror\",\n    10402: \"Music\",\n    9648: \"Mystery\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10770: \"TV Movie\",\n    53: \"Thriller\",\n    10752: \"War\",\n    37: \"Western\"\n  });\n  const returnGenre = id => {\n    var _GENRE_BY_ID$id;\n    return (_GENRE_BY_ID$id = GENRE_BY_ID[id]) !== null && _GENRE_BY_ID$id !== void 0 ? _GENRE_BY_ID$id : null;\n  };\n  const getMovies = async () => {\n    const response = await fetch(\"https://nomad-movies.nomadcoders.workers.dev/movies\");\n    const data = await response.json();\n    console.log(data);\n    setLoading(false);\n    setMovies(data);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movies.map(movie => {\n        var _movie$genre_ids;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [movie.title, movie.original_language === \"en\" ? null : /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\" (\", movie.original_title, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_path,\n            width: \"40%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Released in \", movie.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: \"none\",\n              display: \"inline\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                float: \"left\"\n              },\n              children: \"Genre : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 66\n            }, this), \" \", (_movie$genre_ids = movie.genre_ids) === null || _movie$genre_ids === void 0 ? void 0 : _movie$genre_ids.map(id => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  float: \"left\"\n                },\n                children: [\" \\xA0\", returnGenre(id)]\n              }, movie.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 22\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Summary\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), movie.overview]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","loading","setLoading","movies","setMovies","GENRE_BY_ID","Object","freeze","returnGenre","id","_GENRE_BY_ID$id","getMovies","response","fetch","data","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","_movie$genre_ids","title","original_language","original_title","src","poster_path","width","release_date","style","listStyleType","display","float","genre_ids","overview","_c","$RefreshReg$"],"sources":["/Users/seoyeonheo/projects/react-for-beginners/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  const GENRE_BY_ID = Object.freeze({\n    28: \"Action\", 12: \"Adventure\", 16: \"Animation\", 35: \"Comedy\", 80: \"Crime\",\n    99: \"Documentary\", 18: \"Drama\", 10751: \"Family\", 14: \"Fantasy\", 36: \"History\",\n    27: \"Horror\", 10402: \"Music\", 9648: \"Mystery\", 10749: \"Romance\",\n    878: \"Science Fiction\", 10770: \"TV Movie\", 53: \"Thriller\", 10752: \"War\", 37: \"Western\",\n  });\n  const returnGenre = (id) => GENRE_BY_ID[id] ?? null;\n\n  const getMovies = async () => {\n    const response = await fetch(\"https://nomad-movies.nomadcoders.workers.dev/movies\");\n    const data = await response.json();\n    console.log(data);\n    setLoading(false);\n    setMovies(data);\n  }\n\n  useEffect(()=>{\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      {loading ? <h1>Loading...</h1> : \n      <div>\n        {movies.map(movie => (          \n          <div key={movie.id}>\n            <h2>\n              {movie.title}            \n              {movie.original_language===\"en\" ? null : \n              <small> ({movie.original_title})</small>}\n            </h2>\n            <img src={movie.poster_path} width=\"40%\"/>\n            <h4>Released in {movie.release_date}</h4>\n            <ul style={{listStyleType:\"none\", display:\"inline\"}}><strong style={{float:\"left\"}}>Genre : </strong> {movie.genre_ids?.map(id => {\n              return <li style={{float:\"left\"}}key={movie.id}> &nbsp;{returnGenre(id)}</li>  \n            })\n            }\n            </ul>\n            <p>Summary<br />{movie.overview}</p>\n            <hr />\n            </div>))\n        }\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC;IAChC,EAAE,EAAE,QAAQ;IAAE,EAAE,EAAE,WAAW;IAAE,EAAE,EAAE,WAAW;IAAE,EAAE,EAAE,QAAQ;IAAE,EAAE,EAAE,OAAO;IACzE,EAAE,EAAE,aAAa;IAAE,EAAE,EAAE,OAAO;IAAE,KAAK,EAAE,QAAQ;IAAE,EAAE,EAAE,SAAS;IAAE,EAAE,EAAE,SAAS;IAC7E,EAAE,EAAE,QAAQ;IAAE,KAAK,EAAE,OAAO;IAAE,IAAI,EAAE,SAAS;IAAE,KAAK,EAAE,SAAS;IAC/D,GAAG,EAAE,iBAAiB;IAAE,KAAK,EAAE,UAAU;IAAE,EAAE,EAAE,UAAU;IAAE,KAAK,EAAE,KAAK;IAAE,EAAE,EAAE;EAC/E,CAAC,CAAC;EACF,MAAMC,WAAW,GAAIC,EAAE;IAAA,IAAAC,eAAA;IAAA,QAAAA,eAAA,GAAKL,WAAW,CAACI,EAAE,CAAC,cAAAC,eAAA,cAAAA,eAAA,GAAI,IAAI;EAAA;EAEnD,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,CAAC;IACnF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBZ,UAAU,CAAC,KAAK,CAAC;IACjBE,SAAS,CAACU,IAAI,CAAC;EACjB,CAAC;EAEDlB,SAAS,CAAC,MAAI;IACZe,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAoB,QAAA,EACGjB,OAAO,gBAAGH,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAC9BxB,OAAA;MAAAoB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAACC,KAAK;QAAA,IAAAC,gBAAA;QAAA,oBACf3B,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAAoB,QAAA,GACGM,KAAK,CAACE,KAAK,EACXF,KAAK,CAACG,iBAAiB,KAAG,IAAI,GAAG,IAAI,gBACtC7B,OAAA;cAAAoB,QAAA,GAAO,IAAE,EAACM,KAAK,CAACI,cAAc,EAAC,GAAC;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACLxB,OAAA;YAAK+B,GAAG,EAAEL,KAAK,CAACM,WAAY;YAACC,KAAK,EAAC;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC1CxB,OAAA;YAAAoB,QAAA,GAAI,cAAY,EAACM,KAAK,CAACQ,YAAY;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzCxB,OAAA;YAAImC,KAAK,EAAE;cAACC,aAAa,EAAC,MAAM;cAAEC,OAAO,EAAC;YAAQ,CAAE;YAAAjB,QAAA,gBAACpB,OAAA;cAAQmC,KAAK,EAAE;gBAACG,KAAK,EAAC;cAAM,CAAE;cAAAlB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,GAAAG,gBAAA,GAACD,KAAK,CAACa,SAAS,cAAAZ,gBAAA,uBAAfA,gBAAA,CAAiBF,GAAG,CAACd,EAAE,IAAI;cAChI,oBAAOX,OAAA;gBAAImC,KAAK,EAAE;kBAACG,KAAK,EAAC;gBAAM,CAAE;gBAAAlB,QAAA,GAAe,OAAO,EAACV,WAAW,CAACC,EAAE,CAAC;cAAA,GAAjCe,KAAK,CAACf,EAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA8B,CAAC;YAC/E,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEE,CAAC,eACLxB,OAAA;YAAAoB,QAAA,GAAG,SAAO,eAAApB,OAAA;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EAACE,KAAK,CAACc,QAAQ;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpCxB,OAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAdEE,KAAK,CAACf,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeX,CAAC;MAAA,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACtB,EAAA,CAlDQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}